name: E2E Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  e2e-tests:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install main app dependencies
      run: npm ci

    - name: Install e2e test dependencies
      run: |
        cd e2e-tests
        npm ci

    - name: Install Playwright browsers
      run: |
        cd e2e-tests
        npx playwright install --with-deps

    - name: Setup test database
      run: |
        # Initialize the database for testing
        npm run migrate:init
        
    - name: Start NutriStats application
      run: |
        # Start the app in background
        NODE_ENV=test PORT=8080 npm start &
        echo $! > app.pid
        
        # Wait for the application to be ready
        echo "Waiting for application to start..."
        timeout=60
        while [ $timeout -gt 0 ]; do
          if curl -f http://localhost:8080 >/dev/null 2>&1; then
            echo "✅ Application is ready!"
            break
          fi
          echo "⏳ Waiting for app... ($timeout seconds remaining)"
          sleep 2
          timeout=$((timeout-2))
        done
        
        if [ $timeout -le 0 ]; then
          echo "❌ Application failed to start within 60 seconds"
          exit 1
        fi

    - name: Run E2E tests
      run: |
        cd e2e-tests
        # Use JWT strategy for faster CI execution
        AUTH_STRATEGY=jwt npm test
      env:
        CI: true

    - name: Upload test artifacts
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: playwright-report
        path: |
          e2e-tests/test-artifacts/
        retention-days: 7

    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results
        path: |
          e2e-tests/test-results/
        retention-days: 7

    - name: Cleanup
      if: always()
      run: |
        # Stop the application
        if [ -f app.pid ]; then
          kill $(cat app.pid) 2>/dev/null || true
          rm app.pid
        fi
        
        # Kill any remaining node processes
        pkill -f "node server.js" || true